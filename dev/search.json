[{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"How to Simulate Water Balance with R-Abimo","text":"package provides R-implementation extension simple water balance model Berlin ABIMO 3.2, originally developed Federal Institute Hydrology (Bundesanstalt für Gewässerkunde) rural areas later adapted urban areas, namely Berlin, Germany. May 2022, source code model published developer platform GitHub (https://github.com/umweltatlas/abimo). research project AMAREX (acronym German translation “adaptation stormwater management extreme events”), funded former German Federal Ministry Education Research (Bundesministerium für Bildung und Forschung – BMBF), , package authors Kompetenzzentrum Wasser Berlin gGmbH (KWB) started work original program code, written programming language C++ (https://github.com/KWB-R/abimo). decided transfer model programming language R, rename R-Abimo (see e.g. ) publish form R package kwb.rabimo. Compared original model, R-Abimo generic (.e. can easily adapted cities Berlin) contains additional features: simulation stormwater management measures (green roofs, swales), “conversion” urban areas “natural” areas, calculation delta-W, indicator deviation urban (status quo) state assumed “natural” state.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"How to Simulate Water Balance with R-Abimo","text":"use package, need R installed version >= 4.3.1. can download current version R . necessary, useful, usage Integrated Development Environment (IDE), RStudio Desktop can downloaded .","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"How to Simulate Water Balance with R-Abimo","text":"order install kwb.rabimo directly GitHub account KWB-R, recommend install R package remotes first: can install kwb.rabimo either latest “official” version: latest “development” version: setting build_vignettes = TRUE make sure tutorial vignette installed together package. Please note tutorial currently available “development” version.","code":"# Install package \"remotes\" from CRAN install.packages(\"remotes\") # Install package \"kwb.rabimo\" (latest \"release\") from GitHub remotes::install_github(\"KWB-R/kwb.rabimo\") # Install package \"kwb.rabimo\" (development version) from GitHub remotes::install_github(\"KWB-R/kwb.rabimo@dev\", build_vignettes = TRUE)"},{"path":[]},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"provide-input-data-and-configuration-for-berlin","dir":"Articles","previous_headings":"Usage","what":"Provide input data and configuration for Berlin","title":"How to Simulate Water Balance with R-Abimo","text":"Compared original C++ version Abimo modified structures input data, output data configuration. Berlin, Germany, provide data new structures package: object abimo_inputs list two elements: abimo_inputs$data data frame containing actual input data. row represents block area column represents block area’s property. abimo_inputs$config list configures runoff factors (runoff calculation) Bagrov values (evapotranspiration calculation) different surface types swale evaporation factor determines fraction water going swale becomes evaporation (rest becomes infiltration). Note: provide also object rabimo_inputs_2020, refers older version Berlin data set. can used almost way rabimo_inputs_2025. However, old version contain geographical information cover within tutorial.","code":"# Load Berlin data in the original Abimo format abimo_inputs <- kwb.rabimo::rabimo_inputs_2025"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"inspect-the-input-data","dir":"Articles","previous_headings":"Usage","what":"Inspect the input data","title":"How to Simulate Water Balance with R-Abimo","text":"may inspect first rows (relevant columns) input data may print whole configuration object Please refer help page rabimo_inputs_2025 information. open help page, run","code":"head(as.data.frame(abimo_inputs$data)[, 1:24]) #>               code prec_yr prec_s epot_yr epot_s district total_area      roof #> 1 0100980011000100     608    324     666    509        1   4623.972 0.3243243 #> 2 0100980011000200     607    324     666    509        1  13430.944 0.0004668 #> 3 0100980011000300     607    324     666    509        1   5603.764 0.3893303 #> 4 0100980021000200     609    324     666    509        1  34344.730 0.4511181 #> 5 0100980021000300     608    324     666    509        1  48930.206 0.4155595 #> 6 0100980021000400     609    324     666    509        1  13977.561 0.0939597 #>   green_roof swg_roof       pvd swg_pvd srf1_pvd srf2_pvd srf3_pvd srf4_pvd #> 1     0.0000     0.86 0.3704374    0.50     0.49     0.46     0.03     0.02 #> 2     0.0000     0.70 0.4371382    0.68     0.31     0.53     0.07     0.09 #> 3     0.0939     0.76 0.4414658    0.55     0.20     0.60     0.10     0.10 #> 4     0.2134     0.94 0.3339549    0.75     0.45     0.28     0.13     0.14 #> 5     0.0277     0.73 0.3574335    0.61     0.42     0.38     0.08     0.12 #> 6     0.0000     0.82 0.4508725    0.78     0.31     0.56     0.01     0.12 #>   srf5_pvd to_swale gw_dist ufc30 ufc150 land_type veg_class irrigation #> 1        0        0     5.9    13     10     urban       9.5          0 #> 2        0        0     5.2    11     10     urban       3.6          0 #> 3        0        0     4.5    13     10     urban       1.5          0 #> 4        0        0     5.4    13     10     urban       5.3          0 #> 5        0        0     5.6    12     10     urban      13.2         50 #> 6        0        0     4.5    11     10     urban       2.7          0 abimo_inputs$config #> $runoff_factors #>     roof surface1 surface2 surface3 surface4 surface5  #>     1.00     0.90     0.70     0.40     0.10     0.48  #>  #> $bagrov_values #>       roof green_roof   surface1   surface2   surface3   surface4   surface5  #>       0.05       0.65       0.11       0.11       0.25       0.40       0.25  #>  #> $swale #> swale_evaporation_factor  #>                      0.1 ?kwb.rabimo::rabimo_inputs_2025"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"visualise-the-input-data","dir":"Articles","previous_headings":"Usage","what":"Visualise the input data","title":"How to Simulate Water Balance with R-Abimo","text":"Since provide Berlin dataset together geographical information can plot spatial distribution variable (e.g. annual precipitation) form map:","code":"# Provide a subset of the data representing a zoom into the centre of Berlin berlin_zoom <- kwb.rabimo::crop_box(abimo_inputs$data,    xoffset = 0.35,    yoffset = 0.5,    xscale = 0.07,    yscale = 0.07 ) #> Warning: attribute variables are assumed to be spatially constant throughout #> all geometries  # Plot annual precipitation plot(berlin_zoom[, \"prec_yr\"], main = \"Annual precipitation in mm\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"run-r-abimo-for-the-status-quo-urban-state","dir":"Articles","previous_headings":"Usage","what":"Run R-Abimo for the status quo (urban state)","title":"How to Simulate Water Balance with R-Abimo","text":"run R-Abimo, call main function run_rabimo() passing input data configuration object function: result data frame contains two columns copied input data: code - unique identifier block area, area - total block area square metres column `area well three columns containing model outputs, namely water balance components: runoff - surface runoff mm, infiltration - infiltration mm, evapor - evaporation mm. model inputs contained geographical information (case) information restored output model results can plotted terms maps:","code":"# Run R-Abimo water_balance_urban <- kwb.rabimo::run_rabimo(   data = berlin_zoom,    config = abimo_inputs$config ) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.01 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.09 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.02 secs)  # Have a look at the first lines of the result data frame head(sf::st_drop_geometry(water_balance_urban)) #>               code      area  runoff infiltr  evapor #> 1 0200010761000000 85207.227 378.040 108.615 116.345 #> 2 0200010901000100 14948.442   0.000  97.119 512.881 #> 3 0200010901000200  8911.477 199.563 171.552 240.885 #> 4 0200010901000300 29381.735  21.930 317.488 272.581 #> 5 0200010941000100 22281.140 285.523 123.478 194.999 #> 6 0200010941000200  8264.302 405.532  75.383 128.085 # Plot model output \"runoff\" plot(water_balance_urban[, \"runoff\"], main = \"Annual runoff in mm\") # Plot model output \"infiltration\" plot(water_balance_urban[, \"infiltr\"], main = \"Annual infiltration in mm\") # Plot model output \"evaporation\" plot(water_balance_urban[, \"evapor\"], main = \"Annual evaporation in mm\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"generate-your-own-block-areas","dir":"Articles","previous_headings":"Usage","what":"Generate your own block areas","title":"How to Simulate Water Balance with R-Abimo","text":"package provides function generate_rabimo_area() generate block areas input format R-Abimo requires. need pass least unique identifier(s) (code) block area(s). leave arguments blank, block properties (.e. columns data frame) filled default values. However, can override default values passing arguments named according names input columns:  may use function sensitivity analysis R-Abimo model.","code":"# Generate artificial block areas, using default values and differing only in  # the fractions of the areas that refer to roofs codes <- paste0(\"area-\", 1:5) art_blocks <- kwb.rabimo::generate_rabimo_area(   code = codes,    roof = seq(0, 1, length.out = length(codes)) )  # Have a look at the data art_blocks #>     code prec_yr prec_s epot_yr epot_s district total_area main_frac roof #> 1 area-1     600    300     700    500        0        100         1 0.00 #> 2 area-2     600    300     700    500        0        100         1 0.25 #> 3 area-3     600    300     700    500        0        100         1 0.50 #> 4 area-4     600    300     700    500        0        100         1 0.75 #> 5 area-5     600    300     700    500        0        100         1 1.00 #>   green_roof swg_roof pvd swg_pvd srf1_pvd srf2_pvd srf3_pvd srf4_pvd srf5_pvd #> 1          0        1 0.6     0.7      0.5      0.2      0.1      0.1      0.1 #> 2          0        1 0.6     0.7      0.5      0.2      0.1      0.1      0.1 #> 3          0        1 0.6     0.7      0.5      0.2      0.1      0.1      0.1 #> 4          0        1 0.6     0.7      0.5      0.2      0.1      0.1      0.1 #> 5          0        1 0.6     0.7      0.5      0.2      0.1      0.1      0.1 #>   road_frac pvd_r swg_pvd_r srf1_pvd_r srf2_pvd_r srf3_pvd_r srf4_pvd_r #> 1         0   0.9         1        0.9        0.1          0          0 #> 2         0   0.9         1        0.9        0.1          0          0 #> 3         0   0.9         1        0.9        0.1          0          0 #> 4         0   0.9         1        0.9        0.1          0          0 #> 5         0   0.9         1        0.9        0.1          0          0 #>   to_swale gw_dist ufc30 ufc150 land_type veg_class irrigation #> 1        0       3    13     13     urban        35          0 #> 2        0       3    13     13     urban        35          0 #> 3        0       3    13     13     urban        35          0 #> 4        0       3    13     13     urban        35          0 #> 5        0       3    13     13     urban        35          0  # Run R-Abimo on the block areas art_water_balance <- kwb.rabimo::run_rabimo(art_blocks, config = abimo_inputs$config) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.00 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.01 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.00 secs)  # How does the roof area influence the runoff? plot(art_blocks$roof, art_water_balance$runoff)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"compare-the-urban-state-with-a-natural-reference-state","dir":"Articles","previous_headings":"Usage","what":"Compare the urban state with a natural reference state","title":"How to Simulate Water Balance with R-Abimo","text":"research project AMAREX propose use deviation (urban) water balance assumed “natural” state indicator vulnerability urban area climate-related effects (heat, flooding, negative impacts surface water quality). measure deviation introduce ΔW\\Delta W calculated follows: $$ \\Delta W = \\frac{1}{2}\\space(|e_{nat}-e_{urb}|+|i_{nat}-i_{urb}|+|r_{nat}-r_{urb}|)\\space\\frac{100\\%}{P} $$ enate_{nat} eurbe_{urb} = evaporation natural urban state, respectively, mm, inati_{nat} iurbi_{urb} = infiltration natural urban state, respectively, mm, rnatr_{nat} rurbr_{urb} = runoff natural urban state, respectively, mm, PP = annual precipitation mm. higher value ΔW\\Delta W higher deviation natural water balance, .e. area less similar natural area. lower value ΔW\\Delta W lower deviation natural water balance, .e. similar urban area natural area. hypothesis lower value ΔW\\Delta W indicates better preparedness climate change effects (e.g. increased evaporation occurs natural state scenario leads reduction heat).","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"run-r-abimo-for-a-natural-state-scenario","dir":"Articles","previous_headings":"Usage","what":"Run R-Abimo for a natural state scenario","title":"How to Simulate Water Balance with R-Abimo","text":"package provide function data_to_natural() converts urban block areas corresponding “natural” block areas. function converts roof areas unbuilt paved areas pervious areas assumes overall vegetation can found park (mixture meadows, bushes trees).","code":"# Convert urban state to \"natural\" state berlin_zoom_natural <- kwb.rabimo::data_to_natural(berlin_zoom)  # Calculate the water balance for the \"natural\" state water_balance_natural <- kwb.rabimo::run_rabimo(   data = berlin_zoom_natural,    config = abimo_inputs$config ) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.02 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.09 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.01 secs)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"calculate-and-plot-delta-w","dir":"Articles","previous_headings":"Usage","what":"Calculate and plot “Delta-W”","title":"How to Simulate Water Balance with R-Abimo","text":"Calculate deviation natural state percent: function claculate_delta_w returns data frame two columns: code - code areas, delta_w - value ΔW\\Delta W percent. water balance results provided together geographical information, spatial distribution ΔW\\Delta W values can visualised map. order , first define helper function plotting Delta-W nice colour palette: Now let’s use function plot Delta-W values map:","code":"delta_w <- kwb.rabimo::calculate_delta_w(   urban = water_balance_urban,   natural = water_balance_natural ) # Show the first rows of the delta_w data frame (without geometry)  head(sf::st_drop_geometry(delta_w)) #>               code delta_w #> 1 0200010761000000    62.7 #> 2 0200010901000100    15.7 #> 3 0200010901000200    39.6 #> 4 0200010901000300    37.7 #> 5 0200010941000100    47.3 #> 6 0200010941000200    66.6 # Define function to plot Delta-W plot_delta_w <- function(data, main) {   palette <- colorRampPalette(c(\"white\", \"#a9e0ff\", '#7b7bbc', \"#350005\"))(15)   breaks <- seq(0, 100, length.out = length(palette) + 1)   plot(data[, \"delta_w\"], main = main, pal = palette, breaks = breaks) } # Plot deviation from natural water balance plot_delta_w(delta_w, main = \"Deviation from natural water balance in %\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"simulate-rainwater-management-measures","dir":"Articles","previous_headings":"Usage","what":"Simulate rainwater management measures","title":"How to Simulate Water Balance with R-Abimo","text":"R-Abimo currently allows simulate three rainwater management measures: green roofs, unsealing paved areas, infiltration swales.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"simulate-green-roofs","dir":"Articles","previous_headings":"Usage > Simulate rainwater management measures","what":"Simulate green roofs","title":"How to Simulate Water Balance with R-Abimo","text":"Green roofs increase evaporation reduce runoff. order able simulate effect green roofs R-Abimo, introduced column green_roof input data. values given column refer fractions roof areas refer green roof areas. Let’s see deviation natural state decreases introduce green roofs test area city centre. assume block fraction roof areas belong green roofs least 50 percent:   colours become brighter referring lower Delta-W values .e.  “natural” water balances.","code":"# Make a copy of the original input data zoom_green_roof <- berlin_zoom  # Target green roof fraction green_roof_target <- 0.5  # Which blocks need more green roofs? needs_green_roofs <- zoom_green_roof$green_roof < green_roof_target  # Set the target green roof fraction zoom_green_roof$green_roof[needs_green_roofs] <- green_roof_target  # Simulate the water balance water_balance_green_roof <- kwb.rabimo::run_rabimo(   data = zoom_green_roof,    config = abimo_inputs$config ) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.01 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.10 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.02 secs)  # Calculate Delta-W delta_w_green_roof <- kwb.rabimo::calculate_delta_w(   urban = water_balance_green_roof,   natural = water_balance_natural ) # Plot Delta-W for the status quo plot_delta_w(delta_w, main = \"Delta-W (status quo)\") # Plot Delta-W for the green roof scenario plot_delta_w(delta_w_green_roof, main = \"Delta-W (>= 50 % green roofs)\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"simulate-the-unsealing-of-paved-areas","dir":"Articles","previous_headings":"Usage > Simulate rainwater management measures","what":"Simulate the unsealing of paved areas","title":"How to Simulate Water Balance with R-Abimo","text":"column pvd refers fractions total areas paved. order simulate paved areas unsealed decrease fraction paved areas constant factor, let’s say reduce fraction 50 percent:   see effect similar green roof scenario: colours become brighter referring smaller Delta-W values.","code":"# Make a copy of the original input data zoom_unsealed <- berlin_zoom  # Reduce the fraction of paved areas by 50 percent zoom_unsealed$pvd <- zoom_unsealed$pvd * 0.5  # Simulate the water balance water_balance_unsealed <- kwb.rabimo::run_rabimo(   data = zoom_unsealed,    config = abimo_inputs$config ) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.01 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.10 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.02 secs)  # Calculate Delta-W delta_w_unsealed <- kwb.rabimo::calculate_delta_w(   urban = water_balance_unsealed,   natural = water_balance_natural ) # Plot Delta-W for the status quo plot_delta_w(delta_w, main = \"Delta-W (status quo)\") # Plot Delta-W for the green roof scenario plot_delta_w(delta_w_unsealed, main = \"Delta-W (pavement reduced by 50 %)\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/articles/tutorial.html","id":"simulate-infiltration-swales","dir":"Articles","previous_headings":"Usage > Simulate rainwater management measures","what":"Simulate infiltration swales","title":"How to Simulate Water Balance with R-Abimo","text":"order simulate infiltration swales introduced column to_swale input data. values column indicate fraction total sealed area (.e. roof area + unbuilt paved area) connected infiltration swale. infiltration model quite simple: assume infiltration swale works perfectly, .e. small part inflow converted evaporation remaining part inflow converted infiltration. configuration object contains swale_evaporation_factor determines fraction incoming inflow converted evaporation. Let’s (probably unrealistically) assume block connect 50 percent sealed area infiltration swale. change Delta-W?   let exercise user assess three measures biggest impact!","code":"# Make a copy of the original input data zoom_swale <- berlin_zoom  # Connect 50 percent of the sealed (= roof + unbuilt paved) areas to swales zoom_swale$to_swale <- 0.5  # Simulate the water balance water_balance_swale <- kwb.rabimo::run_rabimo(   data = zoom_swale,    config = abimo_inputs$config ) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.01 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.10 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.02 secs)  # Calculate Delta-W delta_w_swale <- kwb.rabimo::calculate_delta_w(   urban = water_balance_swale,   natural = water_balance_natural ) # Plot Delta-W for the status quo plot_delta_w(delta_w, main = \"Delta-W (status quo)\") # Plot Delta-W for the green roof scenario plot_delta_w(delta_w_swale, main = \"Delta-W (50% of sealed connected to swale)\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hauke Sonnenberg. Author, maintainer. Francesco Del Punta. Author. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sonnenberg H, Del Punta F (2025). kwb.rabimo: R Implementation Water Balance Model Abimo. R package version 2.0.0.9000, https://github.com/KWB-R/kwb.rabimo.","code":"@Manual{,   title = {kwb.rabimo: R Implementation of Water Balance Model Abimo},   author = {Hauke Sonnenberg and Francesco {Del Punta}},   year = {2025},   note = {R package version 2.0.0.9000},   url = {https://github.com/KWB-R/kwb.rabimo}, }"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Implementation of Water Balance Model Abimo","text":"details install KWB-R packages checkout installation tutorial.","code":"### Optionally: specify GitHub Personal Access Token (GITHUB_PAT) ### See here why this might be important for you: ### https://kwb-r.github.io/kwb.pkgbuild/articles/install.html#set-your-github_pat  # Sys.setenv(GITHUB_PAT = \"mysecret_access_token\")  # Install package \"remotes\" from CRAN if (! require(\"remotes\")) {   install.packages(\"remotes\", repos = \"https://cloud.r-project.org\") }  # Install KWB package 'kwb.rabimo' from GitHub remotes::install_github(\"KWB-R/kwb.rabimo\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/actual_evaporation_waterbody_or_pervious.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Actual Evapotranspiration for Waterbodies or Pervious Areas — actual_evaporation_waterbody_or_pervious","title":"Calculate Actual Evapotranspiration for Waterbodies or Pervious Areas — actual_evaporation_waterbody_or_pervious","text":"Calculate Actual Evapotranspiration Waterbodies Pervious Areas","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/actual_evaporation_waterbody_or_pervious.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Actual Evapotranspiration for Waterbodies or Pervious Areas — actual_evaporation_waterbody_or_pervious","text":"","code":"actual_evaporation_waterbody_or_pervious(   usage_tuple,   climate,   soil_properties,   dbg = TRUE,   ...,   digits = NULL )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/actual_evaporation_waterbody_or_pervious.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Actual Evapotranspiration for Waterbodies or Pervious Areas — actual_evaporation_waterbody_or_pervious","text":"usage_tuple list elements land_type, veg_class, irrigation climate list elements epot.year, epot.summer (potential evaporation mm per year summer period, respecively), prec.year, prec.summer (precipitation mm per year summer period, respectively). soil_properties list returned get_soil_properties, elements mean_potential_capillary_rise_rate, g02, potential_capillary_rise, depth_to_water_table dbg logical indicating whether show debug messages ... arguments passed real_evapo_transpiration run_parallel, blocksize digits optional. given, BAGROV parameter values rounded number digits. reduces number BAGROV curves need calculated thus improves performance (reducing precision output)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","text":"Calculate deviation natural water balance (delta-W) given R-Abimo results returned run_rabimo.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","text":"","code":"calculate_delta_w(   natural,   urban,   columns_water_balance = c(\"runoff\", \"infiltr\", \"evapor\"),   column_code = \"code\",   digits = 1L )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","text":"natural R-Abimo results \"natural\" scenario urban R-Abimo results \"urban\" scenario columns_water_balance names columns natural urban, respectively, containing water balance components runoff, infiltration, evaporation. Default: c(\"runoff\", \"infiltr\", \"evapor\") column_code name column natural urban, respectively, containing block area identifiers. digits integer indicating number decimal places result","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","text":"data frame area codes column code delta-W values column delta_w","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/crop_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop a box out of a shape — crop_box","title":"Crop a box out of a shape — crop_box","text":"Crop box shape","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/crop_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop a box out of a shape — crop_box","text":"","code":"crop_box(x, xoffset = 0.45, yoffset = 0.45, xscale = 0.1, yscale = 0.1)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/crop_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop a box out of a shape — crop_box","text":"x sf object xoffset x-offset fraction original width (0..1) yoffset y-offset fraction original height (0..1) xscale new width fraction original width (0..1) yscale new height fraction original height (0..1)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/data_to_natural.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","title":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","text":"Three scenarios possible: undeveloped: paved constructed areas set 0%. connection sewer. forested: like undeveloped, land type declared \"forested\". horticultural: like undeveloped, land type declared \"horticultural\".","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/data_to_natural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","text":"","code":"data_to_natural(data, type = \"undeveloped\", veg_class = 50)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/data_to_natural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","text":"data input data R-Abimo format type character object containing name natural scenario. Defaults \"undeveloped\" veg_class vegetation class assign row data. Default: 50","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/data_to_natural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","text":"dataframe R-Abimo input data chosen natural scenario","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":null,"dir":"Reference","previous_headings":"","what":"Define List of ","title":"Define List of ","text":"Define list settings control main function run_rabimo behave.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define List of ","text":"","code":"define_controls(   check = TRUE,   use_abimo_bagrov_solver = TRUE,   reproduce_abimo_error = FALSE,   output_format = \"rabimo\",   intermediates = FALSE )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define List of ","text":"check logical indicating whether check functions executed. Default: TRUE. use_abimo_bagrov_solver logical indicating whether use (fast!) algorithm implemented Abimo solve Bagrov equations. Default: TRUE. reproduce_abimo_error logical indicating whether reproduce error contained Abimo (missing area fraction factor). Default: FALSE. output_format one \"abimo\" (upper case columns: CODE, R, ROW, RI, RVOL, ROWVOL, RIVOL, FLAECHE, VERDUNSTUN), \"rabimo\" (lower case columns: code, surface_runoff, infiltration, evaporation). intermediates logical indicating whether intermediate results returned attributes. Default: FALSE.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define List of ","text":"list arguments function list elements","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define List of ","text":"","code":"inputs <- kwb.rabimo::rabimo_inputs_2020 test_data <- inputs$data[sample(seq_len(nrow(inputs$data)), size = 1000L), ] controls_default <- define_controls() controls_no_check <- define_controls(check = FALSE) controls_no_solver <- define_controls(use_abimo_bagrov_solver = FALSE) system.time(result_default <- kwb.rabimo::run_rabimo(   test_data, inputs$config, controls_default )) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.02 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.13 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.03 secs)  #>    user  system elapsed  #>     0.2     0.0     0.2  system.time(result_no_check <- kwb.rabimo::run_rabimo(   test_data, inputs$config, controls_no_check )) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.02 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.13 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.03 secs)  #>    user  system elapsed  #>    0.17    0.01    0.18  identical(result_default, result_no_check) #> [1] TRUE if (FALSE) { # \\dontrun{ system.time(result_no_solver <- kwb.rabimo::run_rabimo(   test_data, inputs$config, controls_no_solver )) } # }"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/distribute_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","title":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","text":"Distribute Rainwater Management Measures Single Block Areas","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/distribute_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","text":"","code":"distribute_measures(blocks, targets, intermediates = FALSE)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/distribute_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","text":"blocks data frame input run_rabimo targets numeric vector elements named green_roof, unpaved, to_swale, value 0 1, describing extent corresponding measures installed average blocks. percentages refer different base areas: green_roof = total area green roofs divided total area roofs; unpaved = sum unpaved (non-roof) area divided total area; to_swale = sum areas connected swale divided sum areas sealed (roof area + paved area). intermediates logical indicating whether return tables intermediate results attributes. default FALSE, .e. attributes attached result data frame.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/distribute_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","text":"data frame columns describing measurements updated. case intermediates = TRUE, data frame attributes green_roof_table, unpaved_area_table, swale_connection_table, carrying intermediate results.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/generate_rabimo_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an area in R-Abimo format with default values — generate_rabimo_area","title":"Generate an area in R-Abimo format with default values — generate_rabimo_area","text":"default values can overridden entering new key-value pairs.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/generate_rabimo_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an area in R-Abimo format with default values — generate_rabimo_area","text":"","code":"generate_rabimo_area(code, ..., column_info = read_column_info())"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/generate_rabimo_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an area in R-Abimo format with default values — generate_rabimo_area","text":"code identifier area ... key = value pairs overriding default column values column_info data frame returned read_column_info","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_measure_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mean/Max Statistics on Measures — get_measure_stats","title":"Get Mean/Max Statistics on Measures — get_measure_stats","text":"Get Mean/Max Statistics Measures","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_measure_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mean/Max Statistics on Measures — get_measure_stats","text":"","code":"get_measure_stats(blocks, reference_system = 2)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_measure_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mean/Max Statistics on Measures — get_measure_stats","text":"blocks data frame similar rabimo_inputs_2020$data, row representing block area reference_system indicator \"reference system\" returned values given. 1: values refer percentages specific areas (green roof: roof area, unsealed: total area, to_swale: sealed area); 2: values refer percentages total area. default 2.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_measure_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mean/Max Statistics on Measures — get_measure_stats","text":"list elements \"mean\" \"max\" list one element per measure","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_soil_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Soil Properties — get_soil_properties","title":"Calculate Soil Properties — get_soil_properties","text":"Provide variables relevant calculate actual evaporation unsealed areas","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_soil_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Soil Properties — get_soil_properties","text":"","code":"get_soil_properties(   land_type,   veg_class,   depth_to_water_table,   field_capacity_30,   field_capacity_150,   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_soil_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Soil Properties — get_soil_properties","text":"land_type land_type string, one \"vegetationless\", \"waterbody\", \"horticultural\", \"urban\", \"forested\" veg_class vegetation class depth_to_water_table depth water table field_capacity_30 field capacity 30 cm depth field_capacity_150 field capacity 150 cm depth dbg logical indicating whether show debug messages","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":null,"dir":"Reference","previous_headings":"","what":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"Data frame configuration object required R-Abimo main function run_rabimo.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"","code":"rabimo_inputs_2020"},{"path":[]},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":"rabimo-inputs-","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2020","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"list containing two elements: data data frame input data R-Abimo (see ) config list model parameters (see )","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":"rabimo-inputs-data","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2020$data","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"data.frame 58531 observations 33 variables: code Unique block area identifier (character) prec_yr Long-term average annual precipitation mm (integer) prec_s Long-term average annual precipitation within summer months (May October) mm (integer) epot_yr Long-term average annual potential evapotranspiration mm (integer) epot_s Long-term average annual potential evapotranspiration within summer months (May October) mm (integer) district Number Berlin \"Bezirk\" (district) block area located (character). column Berlin-specific optional, .e. required model. total_area Total block area square metres (numeric) main_frac Fraction total area considered \"road\" area (numeric value 0.0 1.0). value 0.0 roads modelled separately, .e. block areas . roof Fraction total area considered \"roof\" area (numeric value 0.0 1.0) green_roof Fraction roof area belongs green roofs (numeric value 0.0 1.0). value 1.0 means roofs block area green roofs. swg_roof Fraction roof area connected drainage system (numeric value 0.0 1.0) pvd Fraction total block area paved (numeric value 0.0 1.0) swg_pvd Fraction paved area connected drainage system (numeric value 0.0 1.0) srf1_pvd Fraction paved area belongs surface class 1 (numeric value 0.0 1.0, see note 1 ) srf2_pvd Fraction paved area belongs surface class 2 (numeric value 0.0 1.0, see note 1 ) srf3_pvd Fraction paved area belongs surface class 3 (numeric value 0.0 1.0, see note 1 ) srf4_pvd Fraction paved area belongs surface class 4 (numeric value 0.0 1.0, see note 1 ) srf5_pvd Fraction paved area belongs surface class 5 (numeric value 0.0 1.0, see note 1 ) road_frac Fraction total area considered \"road\" area (numeric value 0.0 1.0) pvd_r Fraction road area (within block area) paved (numeric, see note 2 ) swg_pvd_r Fraction paved road area (within block area) connected drainage system (numeric, see note 2 )) srf1_pvd_r Fraction paved road area (within block area) belongs surface class 1 (numeric, see note 2 )) srf2_pvd_r Fraction paved road area (within block area) belongs surface class 2 (numeric, see note 2 )) srf3_pvd_r Fraction paved road area (within block area) belongs surface class 3 (numeric, see note 2 )) srf4_pvd_r Fraction paved road area (within block area) belongs surface class 4 (numeric, see note 2 )) to_swale Fraction sealed area (roof area + paved area) connected infiltration swale (numeric) gw_dist Distance groundwater table surface metres (numeric) ufc30 field capacity 30 cm depth (numeric) ufc150 field capacity 150 cm depth (numeric) land_type land type, one forested, horticultural, urban, vegetationless, waterbody (character) veg_class vegetation class (numeric values one 0, 1, 10, 25, 30, 35, 40, 45, 50, 55). combination block land use type assigned distinct vegetation class value. irrigation irrigation mm per year (integer) block_type Block type identifier form \"usage-type-id_block-type-id_usage-type-description_block-type-description\" (character) Note 1: sum surface class fractions srf1_pvd, srf2_pvd, srf3_pvd, srf4_pvd, srf5_pvd 1.0 within block area. Note 2: fields suffix \"_r\" zero rows modelled blocks. earlier version dataset, roads modelled parts block area.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":"rabimo-inputs-config","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2020$config","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"list 5 named elements: runoff_factors vector num names roof, surface1, surface2, surface3, surface4, surface5 bagrov_values vector num names roof, green_roof, surface1, surface2, surface3, surface4, surface5 result_digits vector num names R, ROW, RI, RVOL, ROWVOL, RIVOL, FLAECHE, VERDUNSTUNG irrigation_to_zero used! swale vector num names swale_evaporation_factor","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":null,"dir":"Reference","previous_headings":"","what":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"Data frame configuration object required R-Abimo main function run_rabimo. data provided Senate Department Urban Development, Building Housing III D Spatial Data Infrastructure, Environmental Atlas.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"","code":"rabimo_inputs_2025"},{"path":[]},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"rabimo-inputs-","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2025","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"list containing two elements: data data frame input data R-Abimo format (see ) config list object configuration data (see )","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"rabimo-inputs-data","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2025$data","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"data.frame 58531 observations 26 variables: code Unique block area identifier (character) prec_yr Long-term average annual precipitation mm (integer) prec_s Long-term average annual precipitation within summer months (May October) mm (integer) epot_yr Long-term average annual potential evapotranspiration mm (integer) epot_s Long-term average annual potential evapotranspiration within summer months (May October) mm (integer) district Number Berlin \"Bezirk\" (district) block area located (character). column Berlin-specific optional, .e. required model. total_area Total block area square metres (numeric) roof Fraction total area considered \"roof\" area (numeric value 0.0 1.0) green_roof Fraction roof area belongs green roofs (numeric value 0.0 1.0). value 1.0 means roofs block area green roofs. swg_roof Fraction roof area connected drainage system (numeric value 0.0 1.0) pvd Fraction total block area paved (numeric value 0.0 1.0) swg_pvd Fraction paved area connected drainage system (numeric value 0.0 1.0) srf1_pvd Fraction paved area belongs surface class 1 (numeric value 0.0 1.0, see note 1 ) srf2_pvd Fraction paved area belongs surface class 2 (numeric value 0.0 1.0, see note 1 ) srf3_pvd Fraction paved area belongs surface class 3 (numeric value 0.0 1.0, see note 1 ) srf4_pvd Fraction paved area belongs surface class 4 (numeric value 0.0 1.0, see note 1 ) srf5_pvd Fraction paved area belongs surface class 5 (numeric value 0.0 1.0, see note 1 ) to_swale Fraction sealed area (roof area + paved area) connected infiltration swale (numeric value 0.0 1.0) gw_dist Distance groundwater table surface metres (numeric) ufc30 field capacity 30 cm depth (numeric) ufc150 field capacity 150 cm depth (numeric) land_type land type, one forested, horticultural, urban, vegetationless, waterbody (character) veg_class vegetation class index (numeric), derived analysis tree volumes irrigation irrigation mm per year (integer) block_type Block type identifier form \"usage-type-id_block-type-id_usage-type-description_block-type-description\" (character). column Berlin-specific optional, .e. required model. Shape List structure containing geometry information different block areas. column optional. provided, appended model output model results can plotted form maps. Note 1: sum surface class fractions srf1_pvd, srf2_pvd, srf3_pvd, srf4_pvd, srf5_pvd 1.0 within block area.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"rabimo-inputs-config","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2025$config","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"list 3 named elements: runoff_factors Runoff factors, vector numeric names roof, surface1, surface2, surface3, surface4, surface5 bagrov_values Bagrov values sealed surfaces, vector numeric names roof, green_roof, surface1, surface2, surface3, surface4, surface5 swale Model parameter(s) related 'swale' measure, vector numeric currently one value, named swale_evaporation_factor","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"https://www.berlin.de/umweltatlas/en/general/contact/ https://gdi.berlin.de/services/wfs/ua_gruendaecher_2020?REQUEST=GetCapabilities&SERVICE=wfs","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/read_column_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide Meta Information About Input Columns — read_column_info","title":"Provide Meta Information About Input Columns — read_column_info","text":"Provide Meta Information Input Columns","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/read_column_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide Meta Information About Input Columns — read_column_info","text":"","code":"read_column_info()"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/read_column_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide Meta Information About Input Columns — read_column_info","text":"data frame columns \"rabimo_berlin\", \"abimo_berlin\", \"by_100\", \"meaning\", \"unit\", \"type\", \"data_type\", \"default\"","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/real_evapo_transpiration.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","title":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","text":"Calculate Actual Evapotranspiration Bagrov","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/real_evapo_transpiration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","text":"","code":"real_evapo_transpiration(   precipitation,   potential_evaporation,   bagrov_parameter,   x_ratio = NULL,   FUN_y_ratio = y_ratio_3,   ... )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/real_evapo_transpiration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","text":"precipitation precipitation mm potential_evaporation potential evaporation mm bagrov_parameter Bagrov parameter (n-value) x_ratio optional. Instead precipitation potential_evaporation quotient may passed function. idea calculate quotient function reuse quotient instead recalculating . FUN_y_ratio function called calculate y_ratio(s) given x_ratio(s). Default: kwb.rabimo:::y_ratio_3 ... arguments passed FUN_y_ratio","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/real_evapo_transpiration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","text":"estimated actual evapotranspiration mm","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":null,"dir":"Reference","previous_headings":"","what":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"Run R-Abimo, R-implementation Water Balance Model Abimo","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"","code":"run_rabimo(data, config, controls = define_controls())"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"data data frame similar rabimo_inputs_2025$data config configuration object (list) similar rabimo_inputs_2025$config controls list settings control function behave. Use define_controls define list. default list returned define_controls().","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"data frame columns returned Abimo","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"","code":"# Get input data and config for Berlin (version 2020) inputs_2020 <- kwb.rabimo::rabimo_inputs_2020  # Randomly select 1000 blocks (to reduce runtime) data <- inputs_2020$data data <- data[sample(seq_len(nrow(data)), size = 1000L), ]  # Run R-Abimo results_2020 <- kwb.rabimo::run_rabimo(data, inputs_2020$config) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.02 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.13 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.03 secs)   # Get input data and config for Berlin (version 2025) inputs_2025 <- kwb.rabimo::rabimo_inputs_2025  # Crop a box (to reduce runtime) data <- crop_box(inputs_2025$data) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries  # Run R-Abimo results_2025 <- kwb.rabimo::run_rabimo(data, inputs_2025$config) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.18 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.29 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.05 secs)     plot(results_2025[, -1L])"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo_with_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute Rainwater Management Measures and run R-Abimo — run_rabimo_with_measures","title":"Distribute Rainwater Management Measures and run R-Abimo — run_rabimo_with_measures","text":"Distribute Rainwater Management Measures run R-Abimo","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo_with_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute Rainwater Management Measures and run R-Abimo — run_rabimo_with_measures","text":"","code":"run_rabimo_with_measures(   blocks,   measures,   config = kwb.rabimo::rabimo_inputs_2020$config )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo_with_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribute Rainwater Management Measures and run R-Abimo — run_rabimo_with_measures","text":"blocks data frame selected blocks (columns rabimo_inputs_2020$data) measures list elements green_roof, unpaved, to_swale representing target percentages total areas corresponding measure config configuration object, default: rabimo_inputs_2020$config","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/test_plumber_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the API to main functions using the plumber package and swagger — test_plumber_api","title":"Test the API to main functions using the plumber package and swagger — test_plumber_api","text":"Test API main functions using plumber package swagger","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/test_plumber_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the API to main functions using the plumber package and swagger — test_plumber_api","text":"","code":"test_plumber_api()"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/triangle_of_fractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Triangle of Three Fractions — triangle_of_fractions","title":"Plot Triangle of Three Fractions — triangle_of_fractions","text":"Plot Triangle Three Fractions","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/triangle_of_fractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Triangle of Three Fractions — triangle_of_fractions","text":"","code":"triangle_of_fractions(   fractions,   fractions_2 = NULL,   cols = c(\"blue\", \"red\", \"darkgreen\") )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/triangle_of_fractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Triangle of Three Fractions — triangle_of_fractions","text":"fractions numeric vector three values sum one. names vector elements used labels fractions_2 optional. Similar fractions. given, fractions shown dashed lines plot \"deltas\" fractions fractions_2 shown horizontally stacked bars triangle. cols vector length three giving colour names","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/triangle_of_fractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Triangle of Three Fractions — triangle_of_fractions","text":"","code":"# blue, red, green | left, right, bottom components <- c(runoff = 200, infiltration = 50, evaporation = 100) fractions <- components / sum(components) triangle_of_fractions(fractions)  triangle_of_fractions(fractions, fractions_2 = c(0.1, 0.3, 0.6))"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/yearly_height_to_volume_flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Yearly Height (mm) to Volume Flow (unit?) — yearly_height_to_volume_flow","title":"Convert Yearly Height (mm) to Volume Flow (unit?) — yearly_height_to_volume_flow","text":"Convert Yearly Height (mm) Volume Flow (unit?)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/yearly_height_to_volume_flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Yearly Height (mm) to Volume Flow (unit?) — yearly_height_to_volume_flow","text":"","code":"yearly_height_to_volume_flow(height, area)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/yearly_height_to_volume_flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Yearly Height (mm) to Volume Flow (unit?) — yearly_height_to_volume_flow","text":"height height mm area area square metres","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/y_ratio_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup y_ratio for given x_ratio on a BAGROV curve — y_ratio_3","title":"Lookup y_ratio for given x_ratio on a BAGROV curve — y_ratio_3","text":"Lookup y_ratio given x_ratio BAGROV curve","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/y_ratio_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup y_ratio for given x_ratio on a BAGROV curve — y_ratio_3","text":"","code":"y_ratio_3(   bagrov_parameter,   x_ratio,   min_size_for_parallel = 10L,   use_abimo_algorithm = FALSE )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/y_ratio_3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup y_ratio for given x_ratio on a BAGROV curve — y_ratio_3","text":"bagrov_parameter (vector ) BAGROV parameter(s) x_ratio (vector ) x-ratio(s) (precipitation potential evaporation) look corresponding y-ratio(s) (actual evaporation potential evaporation) BAGROV curve(s) min_size_for_parallel minimum number BAGROV curves start parallel processing use_abimo_algorithm whether use original algorithm implemented C++ code (converted R: kwb.rabimo:::yratio_cpp). Default: FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/news/index.html","id":"kwbrabimo-200-2025-05-20","dir":"Changelog","previous_headings":"","what":"kwb.rabimo 2.0.0 (2025-05-20)","title":"kwb.rabimo 2.0.0 (2025-05-20)","text":"contains new data Berlin road areas belong blocks anymore blocks new (English) column names, partial areas given fractions instead percentages absolute areas columns redundant information removed potential evaporation now part input data (originally configured configuration file) model-internal parameters “land_type”, “yield” (renamed : “veg_class”), “irrigation”, originally determined Berlin-specific block area usage structure, now explicitly given input data supports stormwater management measures","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/news/index.html","id":"kwbrabimo-100-2023-11-09","dir":"Changelog","previous_headings":"","what":"kwb.rabimo 1.0.0 (2023-11-09)","title":"kwb.rabimo 1.0.0 (2023-11-09)","text":"First release kwb.rabimo. version tries simulate exactly Abimo 3.3.0 (https://github.com/KWB-R/abimo/releases/tag/v3.3.0) . applied Berlin data (kwb.abimo::abimo_input_2019) remaining maximum differences intermediate variables calculated Abimo kwb.rabimo, respectively, -6% + 2%. probably result differences precision fractional numbers rounding behaviour C++ R, respectively.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/news/index.html","id":"kwbrabimo-0009000","dir":"Changelog","previous_headings":"","what":"kwb.rabimo 0.0.0.9000","title":"kwb.rabimo 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
