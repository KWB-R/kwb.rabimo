[{"path":"https://kwb-r.github.io/kwb.rabimo/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hauke Sonnenberg. Author, maintainer. Francesco Del Punta. Author. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sonnenberg H, Del Punta F (2025). kwb.rabimo: R Implementation Water Balance Model Abimo. R package version 1.0.1.9000, https://github.com/KWB-R/kwb.rabimo.","code":"@Manual{,   title = {kwb.rabimo: R Implementation of Water Balance Model Abimo},   author = {Hauke Sonnenberg and Francesco {Del Punta}},   year = {2025},   note = {R package version 1.0.1.9000},   url = {https://github.com/KWB-R/kwb.rabimo}, }"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Implementation of Water Balance Model Abimo","text":"details install KWB-R packages checkout installation tutorial.","code":"### Optionally: specify GitHub Personal Access Token (GITHUB_PAT) ### See here why this might be important for you: ### https://kwb-r.github.io/kwb.pkgbuild/articles/install.html#set-your-github_pat  # Sys.setenv(GITHUB_PAT = \"mysecret_access_token\")  # Install package \"remotes\" from CRAN if (! require(\"remotes\")) {   install.packages(\"remotes\", repos = \"https://cloud.r-project.org\") }  # Install KWB package 'kwb.rabimo' from GitHub remotes::install_github(\"KWB-R/kwb.rabimo\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/abimo_config_to_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Abimo Configuration to List — abimo_config_to_config","title":"Convert Abimo Configuration to List — abimo_config_to_config","text":"Convert Abimo Configuration List","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/abimo_config_to_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Abimo Configuration to List — abimo_config_to_config","text":"","code":"abimo_config_to_config(abimo_config, add_class_5 = FALSE)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/abimo_config_to_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Abimo Configuration to List — abimo_config_to_config","text":"abimo_config returned kwb.abimo::read_config add_class_5 logical indicating whether add fields fifth surface class. default FALSE.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/abimo_config_to_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Abimo Configuration to List — abimo_config_to_config","text":"list elements \"potential_evaporation\", \"runoff_factors\", \"bagrov_values\", \"result_digits\", \"precipitation_correction_factor\", \"irrigation_to_zero\"","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/abimo_config_to_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Abimo Configuration to List — abimo_config_to_config","text":"","code":"str(kwb.rabimo::abimo_config_to_config(kwb.abimo::read_config())) #> List of 6 #>  $ potential_evaporation          :'data.frame':\t48 obs. of  4 variables: #>   ..$ is_waterbody: logi [1:48] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   ..$ district    : int [1:48] 1 2 3 4 5 6 13 14 15 17 ... #>   ..$ etp         : int [1:48] 825 825 825 825 825 825 825 825 825 825 ... #>   ..$ etps        : num [1:48] 0 0 0 0 0 0 0 0 0 0 ... #>  $ runoff_factors                 : Named num [1:5] 1 0.9 0.7 0.4 0.1 #>   ..- attr(*, \"names\")= chr [1:5] \"roof\" \"surface1\" \"surface2\" \"surface3\" ... #>  $ bagrov_values                  : Named num [1:5] 0.05 0.11 0.11 0.25 0.4 #>   ..- attr(*, \"names\")= chr [1:5] \"roof\" \"surface1\" \"surface2\" \"surface3\" ... #>  $ result_digits                  : Named num [1:8] 3 3 3 3 3 3 0 3 #>   ..- attr(*, \"names\")= chr [1:8] \"R\" \"ROW\" \"RI\" \"RVOL\" ... #>  $ precipitation_correction_factor: num 1.09 #>  $ irrigation_to_zero             : logi FALSE"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/actual_evaporation_waterbody_or_pervious.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Actual Evapotranspiration for Waterbodies or Pervious Areas — actual_evaporation_waterbody_or_pervious","title":"Calculate Actual Evapotranspiration for Waterbodies or Pervious Areas — actual_evaporation_waterbody_or_pervious","text":"Calculate Actual Evapotranspiration Waterbodies Pervious Areas","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/actual_evaporation_waterbody_or_pervious.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Actual Evapotranspiration for Waterbodies or Pervious Areas — actual_evaporation_waterbody_or_pervious","text":"","code":"actual_evaporation_waterbody_or_pervious(   usage_tuple,   climate,   soil_properties,   dbg = TRUE,   ...,   digits = NULL )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/actual_evaporation_waterbody_or_pervious.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Actual Evapotranspiration for Waterbodies or Pervious Areas — actual_evaporation_waterbody_or_pervious","text":"usage_tuple list returned get_usage_tuple climate list elements epot.year, epot.summer (potential evaporation mm per year summer period, respecively), prec.year, prec.summer (precipitation mm per year summer period, respectively). soil_properties list returned get_soil_properties, elements mean_potential_capillary_rise_rate, g02, potential_capillary_rise, depth_to_water_table dbg logical indicating whether show debug messages ... arguments passed real_evapo_transpiration run_parallel, blocksize digits optional. given, BAGROV parameter values rounded number digits. reduces number BAGROV curves need calculated thus improves performance (reducing precision output)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION.html","id":null,"dir":"Reference","previous_headings":"","what":"Assignment between (NUTZUNG, TYP) and (land_type, veg_class, irrigation) — BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION","title":"Assignment between (NUTZUNG, TYP) and (land_type, veg_class, irrigation) — BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION","text":"following tables read csv files merged:","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assignment between (NUTZUNG, TYP) and (land_type, veg_class, irrigation) — BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION","text":"","code":"BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Assignment between (NUTZUNG, TYP) and (land_type, veg_class, irrigation) — BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION","text":"object class data.frame 181 rows 5 columns.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assignment between (NUTZUNG, TYP) and (land_type, veg_class, irrigation) — BERLIN_TYPES_TO_LAND_TYPE_VEG_CLASS_IRRIGATION","text":"berlin_tuples.csv table different occurring (land_type, veg_class, irrigation) tuples berlin_type_tuple_groups.csv assignments berlin_type (input column \"TYP\") tuples berlin_usage_to_type_tuple_groups.csv assignments berlin_usage (input column \"NUTZUNG\") assignments berlin_type (input column \"TYP\") tuple","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","text":"Calculate deviation natural water balance (delta-W) given R-Abimo results returned run_rabimo.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","text":"","code":"calculate_delta_w(natural, urban, ..., implementation = 3L)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","text":"natural R-Abimo results \"natural\" scenario urban R-Abimo results \"urban\" scenario ... arguments passed implementation function specified implementation implementation one 1, 2, 3, indicating different implementation","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w","text":"data frame area codes column code delta-W values column delta_w","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w_1","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w_1","text":"Calculate deviation natural water balance (delta-W) given R-Abimo results returned run_rabimo.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w_1","text":"","code":"calculate_delta_w_1(   natural,   urban,   cols_to_omit = c(\"area\"),   return_codes = FALSE )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w_1","text":"natural R-Abimo results natural scenario urban R-Abimo results \"urban\" scenario cols_to_omit column names contain result data code identifiers. Defaults \"total_area\" return_codes logical value determining whether codes returned along delta-w values","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/calculate_delta_W_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation from Natural Water Balance (Delta-W) — calculate_delta_w_1","text":"dataframe containing delta-w values (optionally areas' codes)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/data_to_natural.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","title":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","text":"Three scenarios possible: undeveloped: paved constructed areas set 0%. connection sewer. forested: like undeveloped, land type declared \"forested\". horticultural: like undeveloped, land type declared \"horticultural\".","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/data_to_natural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","text":"","code":"data_to_natural(data, type = \"undeveloped\")"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/data_to_natural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","text":"data input data R-Abimo format type character object containing name natural scenario. Defaults \"undeveloped\"","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/data_to_natural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform R-Abimo input Data into their natural scenario equivalent — data_to_natural","text":"dataframe R-Abimo input data chosen natural scenario","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":null,"dir":"Reference","previous_headings":"","what":"Define List of ","title":"Define List of ","text":"Define list settings control main function run_rabimo behave.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define List of ","text":"","code":"define_controls(   check = TRUE,   use_abimo_bagrov_solver = TRUE,   reproduce_abimo_error = FALSE,   output_format = \"rabimo\",   intermediates = FALSE )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define List of ","text":"check logical indicating whether check functions executed. Default: TRUE. use_abimo_bagrov_solver logical indicating whether use (fast!) algorithm implemented Abimo solve Bagrov equations. Default: TRUE. reproduce_abimo_error logical indicating whether reproduce error contained Abimo (missing area fraction factor). Default: FALSE. output_format one \"abimo\" (upper case columns: CODE, R, ROW, RI, RVOL, ROWVOL, RIVOL, FLAECHE, VERDUNSTUN), \"rabimo\" (lower case columns: code, surface_runoff, infiltration, evaporation). intermediates logical indicating whether intermediate results returned attributes. Default: FALSE.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define List of ","text":"list arguments function list elements","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/define_controls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define List of ","text":"","code":"inputs <- kwb.rabimo::rabimo_inputs_2020 result <- run_rabimo(inputs$data, inputs$config) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (1.19 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (7.96 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.66 secs)  colMeans(as.matrix(result[, -1L])) #>       area     runoff    infiltr     evapor  #> 15225.0426   162.5073   184.4515   284.8178"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/distribute_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","title":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","text":"Distribute Rainwater Management Measures Single Block Areas","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/distribute_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","text":"","code":"distribute_measures(blocks, targets, intermediates = FALSE)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/distribute_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","text":"blocks data frame input run_rabimo targets numeric vector elements named green_roof, unpaved, to_swale, value 0 1, describing extent corresponding measures installed average blocks. percentages refer different base areas: green_roof = total area green roofs divided total area roofs; unpaved = sum unpaved (non-roof) area divided total area; to_swale = sum areas connected swale divided sum areas sealed (roof area + paved area). intermediates logical indicating whether return tables intermediate results attributes. default FALSE, .e. attributes attached result data frame.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/distribute_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribute Rainwater Management Measures to Single Block Areas — distribute_measures","text":"data frame columns describing measurements updated. case intermediates = TRUE, data frame attributes green_roof_table, unpaved_area_table, swale_connection_table, carrying intermediate results.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/generate_rabimo_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an area in R-ABIMO format with default values. All default values can be overridden by entering new key-value pairs. — generate_rabimo_area","title":"Generate an area in R-ABIMO format with default values. All default values can be overridden by entering new key-value pairs. — generate_rabimo_area","text":"Generate area R-ABIMO format default values. default values can overridden entering new key-value pairs.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/generate_rabimo_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an area in R-ABIMO format with default values. All default values can be overridden by entering new key-value pairs. — generate_rabimo_area","text":"","code":"generate_rabimo_area(code, ..., column_info = read_column_info())"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/generate_rabimo_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an area in R-ABIMO format with default values. All default values can be overridden by entering new key-value pairs. — generate_rabimo_area","text":"code identifier area ... key = value pairs overriding default column values column_info data frame returned read_column_info","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_measure_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mean/Max Statistics on Measures — get_measure_stats","title":"Get Mean/Max Statistics on Measures — get_measure_stats","text":"Get Mean/Max Statistics Measures","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_measure_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mean/Max Statistics on Measures — get_measure_stats","text":"","code":"get_measure_stats(blocks, reference_system = 2)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_measure_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mean/Max Statistics on Measures — get_measure_stats","text":"blocks data frame similar rabimo_inputs_2020$data, row representing block area reference_system indicator \"reference system\" returned values given. 1: values refer percentages specific areas (green roof: roof area, unsealed: total area, to_swale: sealed area); 2: values refer percentages total area. default 2.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_measure_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mean/Max Statistics on Measures — get_measure_stats","text":"list elements \"mean\" \"max\" list one element per measure","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_potential_evaporation.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide Data on Potential Evaporation — get_potential_evaporation","title":"Provide Data on Potential Evaporation — get_potential_evaporation","text":"Provide Data Potential Evaporation","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_potential_evaporation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide Data on Potential Evaporation — get_potential_evaporation","text":"","code":"get_potential_evaporation(is_waterbody, district, lookup)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_potential_evaporation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide Data on Potential Evaporation — get_potential_evaporation","text":"is_waterbody (vector ) logical indicating whether block area type (land_type/veg_class/irrigation tuple) \"waterbody\" district (vector ) integer indicating district number plot area (original input column \"BEZIRK\") lookup data frame key columns is_waterbody, district value columns etp, etps. data frame required structure returned abimo_config_to_config list element \"potential_evaporation\"","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_potential_evaporation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide Data on Potential Evaporation — get_potential_evaporation","text":"","code":"if (FALSE) { # \\dontrun{ config <- abimo_config_to_config(kwb.abimo::read_config()) get_potential_evaporation(   is_waterbody = TRUE,   district = 1,   lookup = config$potential_evaporation )  get_potential_evaporation(   is_waterbody = c(TRUE, TRUE, FALSE, FALSE),   district = c(1, 99, 2, 99),   lookup = config$potential_evaporation ) } # }"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_soil_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Soil Properties — get_soil_properties","title":"Calculate Soil Properties — get_soil_properties","text":"Provide variables relevant calculate actual evaporation unsealed areas","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_soil_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Soil Properties — get_soil_properties","text":"","code":"get_soil_properties(   land_type,   veg_class,   depth_to_water_table,   field_capacity_30,   field_capacity_150,   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_soil_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Soil Properties — get_soil_properties","text":"land_type land_type string, one \"vegetationless\", \"waterbody\", \"horticultural\", \"urban\", \"forested\" veg_class vegetation class depth_to_water_table depth water table field_capacity_30 field capacity 30 cm depth field_capacity_150 field capacity 150 cm depth dbg logical indicating whether show debug messages","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_usage_tuple.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Usage Tuple (Land_type, Veg_class, Irrigation) from NUTZUNG and TYP — get_usage_tuple","title":"Get Usage Tuple (Land_type, Veg_class, Irrigation) from NUTZUNG and TYP — get_usage_tuple","text":"Get Usage Tuple (Land_type, Veg_class, Irrigation) NUTZUNG TYP","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_usage_tuple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Usage Tuple (Land_type, Veg_class, Irrigation) from NUTZUNG and TYP — get_usage_tuple","text":"","code":"get_usage_tuple(usage, type, include_inputs = FALSE)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_usage_tuple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Usage Tuple (Land_type, Veg_class, Irrigation) from NUTZUNG and TYP — get_usage_tuple","text":"usage value column NUTZUNG input data frame type value column TYP input data frame include_inputs logical indicating whether include input values output","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_usage_tuple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Usage Tuple (Land_type, Veg_class, Irrigation) from NUTZUNG and TYP — get_usage_tuple","text":"list elements land_type, veg_class, irrigation","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/get_usage_tuple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Usage Tuple (Land_type, Veg_class, Irrigation) from NUTZUNG and TYP — get_usage_tuple","text":"","code":"get_usage_tuple(10, 10) #>   land_type veg_class irrigation #> 1     urban        40          0 get_usage_tuple(10, 10, TRUE) #>   berlin_usage berlin_type land_type veg_class irrigation #> 1           10          10     urban        40          0 get_usage_tuple(10, 1:3) #>   land_type veg_class irrigation #> 1     urban        35          0 #> 2     urban        35          0 #> 3     urban        45          0 get_usage_tuple(10, 1:3, TRUE) #>   berlin_usage berlin_type land_type veg_class irrigation #> 1           10           1     urban        35          0 #> 2           10           2     urban        35          0 #> 3           10           3     urban        45          0"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/index_string_to_integers.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert String of Integer Ranges to Vector of Integer — index_string_to_integers","title":"Convert String of Integer Ranges to Vector of Integer — index_string_to_integers","text":"Convert e.g. \"1,4-6,10-11,20\" c(1L, 4L, 5L, 6L, 10L, 11L, 20L)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/index_string_to_integers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert String of Integer Ranges to Vector of Integer — index_string_to_integers","text":"","code":"index_string_to_integers(x, splits = c(\",\", \"-\"))"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/index_string_to_integers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert String of Integer Ranges to Vector of Integer — index_string_to_integers","text":"x vector character length one representing string integer ranges, e.g. \"1,4-6,10-11,20\" splits characters 1. split x range strings, 2. split range strings begin end values ranges. Default: c(\",\", \"-\")","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/index_string_to_integers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert String of Integer Ranges to Vector of Integer — index_string_to_integers","text":"vector integer","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/index_string_to_integers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert String of Integer Ranges to Vector of Integer — index_string_to_integers","text":"","code":"index_string_to_integers(\"1,4-6,10-11,20\") #> [1]  1  4  5  6 10 11 20"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/list_to_data_frame_with_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert List of Similar Flat Sublists to a Data Frame — list_to_data_frame_with_keys","title":"Convert List of Similar Flat Sublists to a Data Frame — list_to_data_frame_with_keys","text":"Convert List Similar Flat Sublists Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/list_to_data_frame_with_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert List of Similar Flat Sublists to a Data Frame — list_to_data_frame_with_keys","text":"","code":"list_to_data_frame_with_keys(x, key_name, key_pattern, convert = identity)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/list_to_data_frame_with_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert List of Similar Flat Sublists to a Data Frame — list_to_data_frame_with_keys","text":"x list similar flat lists, .e. lists list elements names list elements length one key_name name column returned data frame contain integer values constructed element names x key_pattern regular expression matching element names x. expression must contain one pair parentheses enclosing part used key, e.g. \"element_([0-9]+)\" convert function applied (character) key. Set e.g. convert = .integer generate integer keys. Default: identity","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/list_to_data_frame_with_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert List of Similar Flat Sublists to a Data Frame — list_to_data_frame_with_keys","text":"data frame keys column named according key_name value columns according list elements sublists x","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/list_to_data_frame_with_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert List of Similar Flat Sublists to a Data Frame — list_to_data_frame_with_keys","text":"","code":"list_to_data_frame_with_keys(   x = list(     element_1 = list(a = 100, b = 10),     element_2 = list(a = 200, b = 20)   ),   key_name = \"element\",   key_pattern = \"element_([0-9]+)\",   convert = as.integer ) #>   element   a  b #> 1       1 100 10 #> 2       2 200 20"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/plot_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Area Fractions and their Names for one Block — plot_block","title":"Plot Area Fractions and their Names for one Block — plot_block","text":"Plot Area Fractions Names one Block","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/plot_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Area Fractions and their Names for one Block — plot_block","text":"","code":"plot_block(block, cex = 1, delta = 0.1)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/plot_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Area Fractions and their Names for one Block — plot_block","text":"block data frame one row columns available data frame returned prepare_input_data cex character expansion factor scale texts delta controls space rectangles","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/plot_block_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Area Fractions of one Block as Part of a Square — plot_block_2","title":"Plot Area Fractions of one Block as Part of a Square — plot_block_2","text":"Plot Area Fractions one Block Part Square","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/plot_block_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Area Fractions of one Block as Part of a Square — plot_block_2","text":"","code":"plot_block_2(   block,   mar = c(1, 1, 3, 1),   density_sealed = 10L,   density_connected = 10L,   col_main = \"white\",   col_road = \"lightgrey\" )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/plot_block_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Area Fractions of one Block as Part of a Square — plot_block_2","text":"block data frame one row columns available data frame returned prepare_input_data mar margin vector passed par density_sealed density shading lines indicating sealed areas density_connected density shading lines indicating connected areas col_main colour given main area col_road colour given road area","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/prepare_berlin_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to be called when using ABIMO with the 'old' Berlin-data structure — prepare_berlin_inputs","title":"Function to be called when using ABIMO with the 'old' Berlin-data structure — prepare_berlin_inputs","text":"calls functions prepare_input_data abimo_config_to_config modifies config-object required structure.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/prepare_berlin_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to be called when using ABIMO with the 'old' Berlin-data structure — prepare_berlin_inputs","text":"","code":"prepare_berlin_inputs(   data_file,   config_file = kwb.abimo::default_config(),   data = NULL,   config = NULL,   dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/prepare_berlin_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to be called when using ABIMO with the 'old' Berlin-data structure — prepare_berlin_inputs","text":"data_file path .dbf file containing input data config_file path .xml config file data optional. Data frame containing input data, e.g. provided abimo_input_2019. config optional. List representing Abimo configuration, e.g. provided read_config. dbg logical indicating whether show debug messages","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/prepare_berlin_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to be called when using ABIMO with the 'old' Berlin-data structure — prepare_berlin_inputs","text":"list object containing elements data, prepared input data config, prepared config object, form readable run_rabimo","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/prepare_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Input Data: Rename, Add Columns — prepare_input_data","title":"Prepare Input Data: Rename, Add Columns — prepare_input_data","text":"Rename columns ABIMO 3.2 original names ABIMO 3.3 internal names","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/prepare_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Input Data: Rename, Add Columns — prepare_input_data","text":"","code":"prepare_input_data(data, config, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/prepare_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Input Data: Rename, Add Columns — prepare_input_data","text":"data data frame columns CODE, REGENJA, REGENSO, NUTZUNG, TYP, BEZIRK, FLGES, STR_FLGES, PROBAU, PROVGU, VGSTRASSE, KAN_BEB, BELAG1, BELAG2, BELAG3, BELAG4, KAN_VGU, STR_BELAG1, STR_BELAG2, STR_BELAG3, STR_BELAG4, KAN_STR, FLUR, FELD_30, FELD_150 config configuration object (list) returned function abimo_config_to_config() used kwb.abimo::read_config() dbg logical indicating whether show debug messages","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/prepare_input_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Input Data: Rename, Add Columns — prepare_input_data","text":"data columns renamed additional columns (e.g. ratios calculated percentages, land type, vegetation class, irrigation)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":null,"dir":"Reference","previous_headings":"","what":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"Data frame configuration object required R-Abimo main function run_rabimo.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"","code":"rabimo_inputs_2020"},{"path":[]},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":"rabimo-inputs-","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2020","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"list containing two elements: data data frame input data R-Abimo (see ) config list model parameters (see )","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":"rabimo-inputs-data","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2020$data","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"data.frame 58531 observations 33 variables: code Unique block area identifier (character) prec_yr Long-term average annual precipitation mm (integer) prec_s Long-term average annual precipitation within summer months (May October) mm (integer) epot_yr Long-term average annual potential evapotranspiration mm (integer) epot_s Long-term average annual potential evapotranspiration within summer months (May October) mm (integer) district Number Berlin \"Bezirk\" (district) block area located (character) total_area Total block area square metres (numeric) main_frac Fraction total area considered \"road\" area (numeric value 0.0 1.0). value 0.0 roads modelled separately, .e. block areas . roof Fraction total area considered \"roof\" area (numeric value 0.0 1.0) green_roof Fraction roof area belongs green roofs (numeric value 0.0 1.0). value 1.0 means roofs block area green roofs. swg_roof Fraction roof area connected drainage system (numeric value 0.0 1.0) pvd Fraction total block area paved (numeric value 0.0 1.0) swg_pvd Fraction paved area connected drainage system (numeric value 0.0 1.0) srf1_pvd Fraction paved area belongs surface class 1 (numeric value 0.0 1.0, see note 1 ) srf2_pvd Fraction paved area belongs surface class 2 (numeric value 0.0 1.0, see note 1 ) srf3_pvd Fraction paved area belongs surface class 3 (numeric value 0.0 1.0, see note 1 ) srf4_pvd Fraction paved area belongs surface class 4 (numeric value 0.0 1.0, see note 1 ) srf5_pvd Fraction paved area belongs surface class 5 (numeric value 0.0 1.0, see note 1 ) road_frac Fraction total area considered \"road\" area (numeric value 0.0 1.0) pvd_r Fraction road area (within block area) paved (numeric, see note 2 ) swg_pvd_r Fraction paved road area (within block area) connected drainage system (numeric, see note 2 )) srf1_pvd_r Fraction paved road area (within block area) belongs surface class 1 (numeric, see note 2 )) srf2_pvd_r Fraction paved road area (within block area) belongs surface class 2 (numeric, see note 2 )) srf3_pvd_r Fraction paved road area (within block area) belongs surface class 3 (numeric, see note 2 )) srf4_pvd_r Fraction paved road area (within block area) belongs surface class 4 (numeric, see note 2 )) to_swale Fraction sealed area (roof area + paved area) connected infiltration swale (numeric) gw_dist Distance groundwater table surface metres (numeric) ufc30 field capacity 30 cm depth (numeric) ufc150 field capacity 150 cm depth (numeric) land_type land type, one forested, horticultural, urban, vegetationless, waterbody (character) veg_class vegetation class (numeric values one 0, 1, 10, 25, 30, 35, 40, 45, 50, 55). combination block land use type assigned distinct vegetation class value. irrigation irrigation mm per year (integer) block_type Block type identifier form \"usage-type-id_block-type-id_usage-type-description_block-type-description\" (character) Note 1: sum surface class fractions srf1_pvd, srf1_pvd, srf1_pvd, srf1_pvd, srf1_pvd 1.0 within block area. Note 2: fields suffix \"_r\" zero rows modelled blocks. earlier version dataset, roads modelled parts block area.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2020.html","id":"rabimo-inputs-config","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2020$config","title":"R-Abimo Inputs (Data and Config) for Berlin, 2020 — rabimo_inputs_2020","text":"list 5 named elements: runoff_factors vector num names roof, surface1, surface2, surface3, surface4, surface5 bagrov_values vector num names roof, green_roof, surface1, surface2, surface3, surface4, surface5 result_digits vector num names R, ROW, RI, RVOL, ROWVOL, RIVOL, FLAECHE, VERDUNSTUNG irrigation_to_zero used! swale vector num names swale_evaporation_factor","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":null,"dir":"Reference","previous_headings":"","what":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"Data frame configuration object required R-Abimo main function run_rabimo. data provided Senate Department Urban Development, Building Housing III D Spatial Data Infrastructure, Environmental Atlas.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"","code":"rabimo_inputs_2025"},{"path":[]},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"rabimo-inputs-","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2025","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"list containing two elements: data data frame input data r-abimo format ...(number vars) config list object configuration data","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"rabimo-inputs-data","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2025$data","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"data.frame 58531 observations 25 variables: code Unique block area identifier (character) prec_yr Long-term average annual precipitation mm (integer) prec_s Long-term average annual precipitation within summer months (May October) mm (integer) epot_yr Long-term average annual potential evapotranspiration mm (integer) epot_s Long-term average annual potential evapotranspiration within summer months (May October) mm (integer) district Number Berlin \"Bezirk\" (district) block area located (character) total_area Total block area square metres (numeric) roof Fraction total area considered \"roof\" area (numeric value 0.0 1.0) green_roof Fraction roof area belongs green roofs (numeric value 0.0 1.0). value 1.0 means roofs block area green roofs. swg_roof Fraction roof area connected drainage system (numeric value 0.0 1.0) pvd Fraction total block area paved (numeric value 0.0 1.0) swg_pvd Fraction paved area connected drainage system (numeric value 0.0 1.0) srf1_pvd Fraction paved area belongs surface class 1 (numeric value 0.0 1.0, see note 1 ) srf2_pvd Fraction paved area belongs surface class 2 (numeric value 0.0 1.0, see note 1 ) srf3_pvd Fraction paved area belongs surface class 3 (numeric value 0.0 1.0, see note 1 ) srf4_pvd Fraction paved area belongs surface class 4 (numeric value 0.0 1.0, see note 1 ) srf5_pvd Fraction paved area belongs surface class 5 (numeric value 0.0 1.0, see note 1 ) to_swale Fraction sealed area (roof area + paved area) connected infiltration swale (numeric) gw_dist Distance groundwater table surface metres (numeric) ufc30 field capacity 30 cm depth (numeric) ufc150 field capacity 150 cm depth (numeric) land_type land type, one forested, horticultural, urban, vegetationless, waterbody (character) veg_class vegetation class index (numeric), derived analysis tree volumes irrigation irrigation mm per year (integer) block_type Block type identifier form \"usage-type-id_block-type-id_usage-type-description_block-type-description\" (character)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"rabimo-inputs-config","dir":"Reference","previous_headings":"","what":"rabimo_inputs_2025$config","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"list 3 named elements: runoff_factors Runoff factors, vector numeric names roof, surface1, surface2, surface3, surface4, surface5 bagrov_values Bagrov values sealed surfaces, vector numeric names roof, green_roof, surface1, surface2, surface3, surface4, surface5 swale Model parameter(s) related 'swale' measure, vector numeric currently one value, named swale_evaporation_factor","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/rabimo_inputs_2025.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"R-Abimo Inputs (Data and Config) for Berlin, 2025. — rabimo_inputs_2025","text":"https://www.berlin.de/umweltatlas/en/general/contact/ https://gdi.berlin.de/services/wfs/ua_gruendaecher_2020?REQUEST=GetCapabilities&SERVICE=wfs","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/range_to_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence of Values Between the Range of Values in a Given Vector — range_to_seq","title":"Sequence of Values Between the Range of Values in a Given Vector — range_to_seq","text":"Sequence Values Range Values Given Vector","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/range_to_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence of Values Between the Range of Values in a Given Vector — range_to_seq","text":"","code":"range_to_seq(x, by = 1)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/range_to_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence of Values Between the Range of Values in a Given Vector — range_to_seq","text":"x vector values take range increment seqence","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/range_to_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence of Values Between the Range of Values in a Given Vector — range_to_seq","text":"sequence values min(x) max(x) increment ","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/read_column_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide Meta Information About Input Columns — read_column_info","title":"Provide Meta Information About Input Columns — read_column_info","text":"Provide Meta Information Input Columns","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/read_column_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide Meta Information About Input Columns — read_column_info","text":"","code":"read_column_info()"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/read_column_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide Meta Information About Input Columns — read_column_info","text":"data frame columns \"rabimo_berlin\", \"abimo_berlin\", \"by_100\", \"meaning\", \"unit\", \"type\", \"data_type\", \"default\"","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/real_evapo_transpiration.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","title":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","text":"Calculate Actual Evapotranspiration Bagrov","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/real_evapo_transpiration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","text":"","code":"real_evapo_transpiration(   precipitation,   potential_evaporation,   bagrov_parameter,   x_ratio = NULL,   FUN_y_ratio = y_ratio_3,   ... )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/real_evapo_transpiration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","text":"precipitation precipitation mm potential_evaporation potential evaporation mm bagrov_parameter Bagrov parameter (n-value) x_ratio optional. Instead precipitation potential_evaporation quotient may passed function. idea calculate quotient function reuse quotient instead recalculating . FUN_y_ratio function called calculate y_ratio(s) given x_ratio(s). Default: kwb.rabimo:::y_ratio_3 ... arguments passed FUN_y_ratio","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/real_evapo_transpiration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Actual Evapotranspiration with Bagrov — real_evapo_transpiration","text":"estimated actual evapotranspiration mm","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":null,"dir":"Reference","previous_headings":"","what":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"Run R-Abimo, R-implementation Water Balance Model Abimo","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"","code":"run_rabimo(data, config, controls = define_controls())"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"data data frame columns returned prepare_input_data config configuration object (list) returned abimo_config_to_config controls list settings control function behave. Use define_controls define list. default list returned define_controls().","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"data frame columns returned Abimo","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run R-Abimo, the R-implementation of Water Balance Model Abimo — run_rabimo","text":"","code":"# Get input data and config for Berlin (version 2020) inputs_2020 <- kwb.rabimo::rabimo_inputs_2020  # Randomly select 1000 blocks (to reduce runtime) data <- inputs_2020$data data <- data[sample(seq_len(nrow(data)), size = 1000L), ]  # Run R-Abimo results_2020 <- kwb.rabimo::run_rabimo(data, inputs_2020$config) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.02 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.13 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.03 secs)   # Get input data and config for Berlin (version 2025) inputs_2025 <- kwb.rabimo::rabimo_inputs_2025  # Randomly select 1000 blocks (to reduce runtime) data <- inputs_2025$data data <- data[sample(seq_len(nrow(data)), size = 1000L), ]  # Run R-Abimo results_2025 <- kwb.rabimo::run_rabimo(data, inputs_2025$config) #> Collecting climate related data ... ok. (0.00 secs)  #> Preparing soil property data for all block areas ... ok. (0.02 secs)  #> Precalculating actual evapotranspirations for impervious areas ... ok. (0.23 secs)  #> Precalculating actual evapotranspirations for waterbodies or pervious areas ... ok. (0.04 secs)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo_with_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute Rainwater Management Measures and run R-Abimo — run_rabimo_with_measures","title":"Distribute Rainwater Management Measures and run R-Abimo — run_rabimo_with_measures","text":"Distribute Rainwater Management Measures run R-Abimo","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo_with_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute Rainwater Management Measures and run R-Abimo — run_rabimo_with_measures","text":"","code":"run_rabimo_with_measures(   blocks,   measures,   config = kwb.rabimo::rabimo_inputs_2020$config )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/run_rabimo_with_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribute Rainwater Management Measures and run R-Abimo — run_rabimo_with_measures","text":"blocks data frame selected blocks (columns rabimo_inputs_2020$data) measures list elements green_roof, unpaved, to_swale representing target percentages total areas corresponding measure config configuration object, default: rabimo_inputs_2020$config","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/test_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the API to main functions using the plumber package and swagger — test_api","title":"Test the API to main functions using the plumber package and swagger — test_api","text":"Test API main functions using plumber package swagger","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/test_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the API to main functions using the plumber package and swagger — test_api","text":"","code":"test_api()"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/triangle_of_fractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Triangle of Three Fractions — triangle_of_fractions","title":"Plot Triangle of Three Fractions — triangle_of_fractions","text":"Plot Triangle Three Fractions","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/triangle_of_fractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Triangle of Three Fractions — triangle_of_fractions","text":"","code":"triangle_of_fractions(   fractions,   fractions_2 = NULL,   cols = c(\"blue\", \"red\", \"darkgreen\") )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/triangle_of_fractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Triangle of Three Fractions — triangle_of_fractions","text":"fractions numeric vector three values sum one. names vector elements used labels fractions_2 optional. Similar fractions. given, fractions shown dashed lines plot \"deltas\" fractions fractions_2 shown horizontally stacked bars triangle. cols vector length three giving colour names","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/triangle_of_fractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Triangle of Three Fractions — triangle_of_fractions","text":"","code":"# blue, red, green | left, right, bottom components <- c(runoff = 200, infiltration = 50, evaporation = 100) fractions <- components / sum(components) triangle_of_fractions(fractions)  triangle_of_fractions(fractions, fractions_2 = c(0.1, 0.3, 0.6))"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/yearly_height_to_volume_flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Yearly Height (mm) to Volume Flow (unit?) — yearly_height_to_volume_flow","title":"Convert Yearly Height (mm) to Volume Flow (unit?) — yearly_height_to_volume_flow","text":"Convert Yearly Height (mm) Volume Flow (unit?)","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/yearly_height_to_volume_flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Yearly Height (mm) to Volume Flow (unit?) — yearly_height_to_volume_flow","text":"","code":"yearly_height_to_volume_flow(height, area)"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/yearly_height_to_volume_flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Yearly Height (mm) to Volume Flow (unit?) — yearly_height_to_volume_flow","text":"height height mm area area square metres","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/y_ratio_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup y_ratio for given x_ratio on a BAGROV curve — y_ratio_3","title":"Lookup y_ratio for given x_ratio on a BAGROV curve — y_ratio_3","text":"Lookup y_ratio given x_ratio BAGROV curve","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/y_ratio_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup y_ratio for given x_ratio on a BAGROV curve — y_ratio_3","text":"","code":"y_ratio_3(   bagrov_parameter,   x_ratio,   min_size_for_parallel = 10L,   use_abimo_algorithm = FALSE )"},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/reference/y_ratio_3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup y_ratio for given x_ratio on a BAGROV curve — y_ratio_3","text":"bagrov_parameter (vector ) BAGROV parameter(s) x_ratio (vector ) x-ratio(s) (precipitation potential evaporation) look corresponding y-ratio(s) (actual evaporation potential evaporation) BAGROV curve(s) min_size_for_parallel minimum number BAGROV curves start parallel processing use_abimo_algorithm whether use original algorithm implemented C++ code (converted R: kwb.rabimo:::yratio_cpp). Default: FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/news/index.html","id":"kwbrabimo-100-2023-11-09","dir":"Changelog","previous_headings":"","what":"kwb.rabimo 1.0.0 (2023-11-09)","title":"kwb.rabimo 1.0.0 (2023-11-09)","text":"First release kwb.rabimo. version tries simulate exactly Abimo 3.3.0 (https://github.com/KWB-R/abimo/releases/tag/v3.3.0) . applied Berlin data (kwb.abimo::abimo_input_2019) remaining maximum differences intermediate variables calculated Abimo kwb.rabimo, respectively, -6% + 2%. probably result differences precision fractional numbers rounding behaviour C++ R, respectively.","code":""},{"path":"https://kwb-r.github.io/kwb.rabimo/dev/news/index.html","id":"kwbrabimo-0009000","dir":"Changelog","previous_headings":"","what":"kwb.rabimo 0.0.0.9000","title":"kwb.rabimo 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
